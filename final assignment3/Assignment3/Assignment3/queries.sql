/*
Deployment script for C:\USERS\ANI\DOCUMENTS\VISUAL STUDIO 2017\PROJECTS\ASSIGNMENT3\ASSIGNMENT3\APP_DATA\HOSPITALDB.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\ANI\DOCUMENTS\VISUAL STUDIO 2017\PROJECTS\ASSIGNMENT3\ASSIGNMENT3\APP_DATA\HOSPITALDB.MDF"
:setvar DefaultFilePrefix "C_\USERS\ANI\DOCUMENTS\VISUAL STUDIO 2017\PROJECTS\ASSIGNMENT3\ASSIGNMENT3\APP_DATA\HOSPITALDB.MDF_"
:setvar DefaultDataPath "C:\Users\Ani\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Ani\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Users].[Id] (SqlSimpleColumn) will not be renamed to Username';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Patients].[Age] (SqlSimpleColumn) will not be renamed to Birthdate';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Appointment].[patiend_id] (SqlSimpleColumn) will not be renamed to Patient_Id';


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[Appointment].[Doctor_id] (SqlSimpleColumn) will not be renamed to Doctor_Id';


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Creating [dbo].[Appointments]...';


GO
CREATE TABLE [dbo].[Appointments] (
    [Id]             INT          IDENTITY (1, 1) NOT NULL,
    [Patient_Id]     INT          NOT NULL,
    [Doctor_Id]      VARCHAR (50) NOT NULL,
    [Admission_date] DATE         NOT NULL,
    [Discharge_date] DATE         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[Patients]...';


GO
CREATE TABLE [dbo].[Patients] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Name]      VARCHAR (50) NOT NULL,
    [Birthdate] DATE         NOT NULL,
    [Phone]     VARCHAR (50) NULL,
    [Address]   VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Username]   VARCHAR (50) NOT NULL,
    [Password]   VARCHAR (50) NOT NULL,
    [Name]       VARCHAR (50) NOT NULL,
    [Role]       SMALLINT     NOT NULL,
    [Email]      VARCHAR (50) NULL,
    [Office]     VARCHAR (4)  NULL,
    [Speciality] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Username] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[FK_Appointment_ToPatients]...';


GO
ALTER TABLE [dbo].[Appointments] WITH NOCHECK
    ADD CONSTRAINT [FK_Appointment_ToPatients] FOREIGN KEY ([Patient_Id]) REFERENCES [dbo].[Patients] ([Id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[FK_Appointments_ToDoctors]...';


GO
ALTER TABLE [dbo].[Appointments] WITH NOCHECK
    ADD CONSTRAINT [FK_Appointments_ToDoctors] FOREIGN KEY ([Doctor_Id]) REFERENCES [dbo].[Users] ([Username]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Appointments] WITH CHECK CHECK CONSTRAINT [FK_Appointment_ToPatients];

ALTER TABLE [dbo].[Appointments] WITH CHECK CHECK CONSTRAINT [FK_Appointments_ToDoctors];


GO
PRINT N'Update complete.';


GO
